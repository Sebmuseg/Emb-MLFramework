# Base image with Miniconda
FROM continuumio/miniconda3

# Copy the environment.yml to a temporary location
COPY ./code/deployment/environment.yml /tmp/

# Create Conda environment for FeatherML
RUN conda env create -f /tmp/environment.yml

# Clean up conda packages to reduce image size
RUN conda clean -afy

# Set environment variables
ENV PYTHONPATH="/app"

# Set the working directory
WORKDIR /app

# Copy the project files into /app
COPY ./code/framework /app

# Activate the environment
SHELL ["conda", "run", "-n", "featherml_env", "/bin/bash", "-c"]

# Arguments to conditionally install specific frameworks
ARG INSTALL_TENSORFLOW=false
ARG INSTALL_PYTORCH=false
ARG INSTALL_ONNX=false
ARG INSTALL_SKLEARN=false
ARG INSTALL_XGBOOST=false
ARG INSTALL_CATBOOST=false
ARG INSTALL_LIGHTGBM=false
ARG INSTALL_TFLITE=false

# Install optional frameworks
RUN \
  if [ "$INSTALL_TENSORFLOW" = "true" ]; then conda install -y -c conda-forge tensorflow; fi && \
  if [ "$INSTALL_PYTORCH" = "true" ]; then conda install -y -c conda-forge pytorch torchvision torchaudio; fi && \
  if [ "$INSTALL_ONNX" = "true" ]; then conda install -y -c conda-forge onnx onnxruntime; fi && \
  if [ "$INSTALL_SKLEARN" = "true" ]; then conda install -y -c conda-forge scikit-learn; fi && \
  if [ "$INSTALL_XGBOOST" = "true" ]; then conda install -y -c conda-forge xgboost; fi && \
  if [ "$INSTALL_CATBOOST" = "true" ]; then conda install -y -c conda-forge catboost; fi && \
  if [ "$INSTALL_LIGHTGBM" = "true" ]; then conda install -y -c conda-forge lightgbm; fi && \
  if [ "$INSTALL_TFLITE" = "true" ]; then pip install tflite-runtime; fi && \
  conda clean -afy

# Expose port for API
EXPOSE 5001

# Start the FastAPI app within the conda environment
CMD ["conda", "run", "--no-capture-output", "-n", "featherml_env", "uvicorn", "api.new_api:app", "--host", "0.0.0.0", "--port", "5001"]